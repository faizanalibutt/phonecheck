apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.4'
    }
}
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.upgenicsint.phonecheck"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 2
        versionName "2.1.59.72"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    dexOptions {
        //javaMaxHeapSize "4g"
        incremental false
        javaMaxHeapSize "2048M"
        preDexLibraries = false
    }

    applicationVariants.all { variant ->
        //0 means yes 1 means no
        variant.resValue "integer", "test_build", "0"
        variant.resValue "string", "build_version", variant.versionName
        variant.resValue "integer", "debug_button", variant.buildType.name.contains("debug") ? "0" : "1"
    }
    flavorDimensions "default"
    productFlavors {
        audio {

        }
        camera {

        }
        stable {

        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {

        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.text'
        exclude 'META-INF/NOTICE'
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    /*splits{
        abi{
            enable true
            reset()
            include 'armeabi','x86','x86_64','mips'
        }
    }*/
}
repositories {
    maven {
        url 'https://dl.bintray.com/farhanahmed95/maven/'
    }
    maven {
        url "https://jitpack.io"
    }
    maven { url 'https://maven.fabric.io/public' }
    jcenter()
    mavenCentral()
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.google.firebase:firebase-database:11.6.2'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.github.tajchert:nammu:1.1.1'
    implementation 'com.github.pro100svitlo:fingerprintAuthHelper:1.3.0'
    implementation 'com.ragnarok.rxcamera:lib:0.0.5'
    implementation 'com.rohit.recycleritemclicksupport:recycleritemclicksupport:1.0.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
        transitive = true
    }
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.6.0'
    implementation 'commons-io:commons-io:2.5'
    implementation 'com.github.farhanahmed95:cabinet:1.0.0@aar'
    /*
                                     * custom implementation of tyorikan's voice recording visualizer library
                                     * */
    //    implementation project(path: ':visualizer', configuration: 'default')
    implementation project(':visualizer')
    implementation 'co.balrampandey:logy:1.0.0'
    /*
                                    compile 'com.github.amlcurran.showcaseview:library:5.4.3'
                                */
    implementation 'com.io7m.jcip:jcip-annotations:1.0.2'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation files('libs/android-core-3.1.0.jar')
    implementation files('libs/android-integration-3.3.0.jar')
    implementation files('libs/core-3.3.1.jar')
    implementation 'com.google.dagger:dagger:2.15'
    kapt 'com.google.dagger:dagger-compiler:2.15'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'

    //     external modules dependencies
    //    implementation project(path: ':hiddencamera', configuration: 'default')
    //    implementation project(path: ':rtaApp', configuration: 'default')
    //    implementation project(path: ':library', configuration: 'default')
    implementation project(':hiddencamera')

    implementation project(':library')
    implementation project(':rtaApp')
    implementation project(':waveform')
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
}

//SAMSUNG SDK SHIT
dependencies {
    implementation files('libs/pass-v1.2.1.jar')
    implementation files('libs/sdk-v1.0.0.jar')
    implementation files('libs/look_v1.3.1.jar')
    implementation(name: 'pen-v5.0.0_lite', ext: 'aar')
}

apply plugin: 'com.google.gms.google-services'
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
}
dependencies {
    implementation 'com.android.support:support-v4:28.0.0'
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}
dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:+'
    implementation 'com.android.support:support-compat:28.0.0'
}
